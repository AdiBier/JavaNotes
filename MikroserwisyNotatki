== SERVICE DISCOVERY ==

=	CLIENT SIDE SERVICE DISCOVERY =

-	Trzeba stworzyć dodatkowy element: Discovery Server
	który będzie rejestrował wszystkie dostępne serwisy
	i udostępniał ich adresy clientowi. 
	Po otrzymaniu adresu klient wywołuje na serwisie
	swoje zapytanie

-	Spring Cloud domyslnie używa tego

=	SERVER SIDE SERVICE DISCOVERY	=

-	W tym wypadku samo zapytanie jest wysyłane do
	Discovery Servera i on potem wywołuje odpowiedni service

=	EUREKA SERVER	=

-	Eureka to biblioteka open source stworzona przez Netflixa
	służaca do budowania discovery serverów
-	Zalezności:
	-	Spring Cloud
	-	Eureka Server (uwzględnia Spring Cloud)

-	@EnableEurekaServer
	//w głównym pliku konfiguracyjnym

-	Aby server nie próbował się zarejestrować sam ze sobą
	trzeba dodać w application.properties
		server.porst=8761
		eureka.client.register-with-eureka=false
		eureka.client.fetch-registry=false

=	EUREKA CLIENT	=

-	Zależność: Spring-cloud-starter-netflix-eureka-client

-	Annotacja
	@EnableEurekaClient

-	W application.properties możemy dodać
		spring.application.name=nazwa-serwisu
	żeby potem w eurece się wyświetlała nazwa

-	Żeby używać restTemplate z Eureką musimy nad tworzonym restTemplate
	dodac annotację 
		@LoadBalanced

-	Wtedy jako URI w restTemplate nie podajemy localhost.. itd
	tylko
		http://NAZWA-SERWISU/{...}
	i Eureka sama już to sobie rozkmini
