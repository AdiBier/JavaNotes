1.	Nastawienie na 100% pokrycia kodu
		*	Nie ma sensu tesowania metod, które nie zawierają logiki biznesowej!
		
2.	Nieintuicyjne nazwy tesów
		*	Im bardziej opisowe tym lepiej!

3.	Długie testy
		*	Test powinien się zamknąć w kilkunastu ms

4.	Testy, które po sobie nie sprzątają
		*	Testy które np. tworzą plik powinny go od razu usunąć

5.	Asercje zawarte w teście powinny być powiązane
	z głownym zadaniem testu

6.	Ignorowanie złego testu, zamiast naprawy testu

7.	Traktowanie testów jako kodu drugiej kategorii

8.	Konieczność ręcznego odpalania testów, brak automatyzacji