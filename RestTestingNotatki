== ZALEŻNOŚCI ==

-	Narzędzia do testowania spring boota:
		spring-boot-starter-test
	

=== PISANIE TESTÓW ===
-	Aby używać annotacji Mockito trzeba:
		@Rule 
		public MockitoRule rule = MockitoJUnit.rule();
	* LUB *
		//Wrzucić w setup @Before lub @BeforeEach:
		MockitoAnnotations.initMocks(StockServiceTest.class); 	

== MOCKOWANIE ==

- 	Przez to że mock nie ma w sobie logiki musimy mu hardcodować
	to co ma zwrócić:
		when(mockName.foo(args})).thenReturn(oczekiwanyReturn);

	np. hardkodujemy co repozytorium ma zwrócić przy danych argumentach.
	Najczęściej chcemy żeby zwróciło jakiegoś stuba.

-	Mockujemy np. metody z repozytoriów, które będą wywoływane
	przez serwisy

-	Z mocków najczęsciej dummy obiekty - stuby.
	Są to, znowu, hardcodowane obiekty które będziemy wrzucać
	do mocków.

-	Właściwą klasę, której metody testujemy, musimy zainicjalizować
	po bożemu, żeby mieć dostęp do logiki w niej zawartej,
	inaczej nie moglibyśmy wywołać metody do testowania.

	Mockito pozwala nam zainicjalizowac ją annotacją:
	@InjectMocks

	Dzięki tej annotacji, tworzymy nowy obiekt z danej klasy i jeżeli
	potrzebuje on jakichś zależności i mamy je zmockowane w teście
	to zostaną one wstrzyknięte.

-	Wywołujemy testowaną metodę i porównujemy jej rezultat z oczekiwaniami.
